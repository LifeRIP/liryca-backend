trigger:
  branches:
    include:
      - main

variables:
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  variables:
    phpVersion: '8.2'
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        sudo add-apt-repository ppa:ondrej/php -y
        sudo apt-get update
        sudo apt-get install php$(phpVersion) php$(phpVersion)-cli php$(phpVersion)-mbstring php$(phpVersion)-xml php$(phpVersion)-curl -y
        sudo update-alternatives --set php /usr/bin/php$(phpVersion)
        php -v
      displayName: 'Install PHP 8.2'

    - script: composer install --no-interaction --prefer-dist
      displayName: 'composer install'

    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: '$(Build.SourcesDirectory)'
      displayName: 'npm install'

    - task: Npm@1
      inputs:
        command: 'custom'
        workingDir: '$(Build.SourcesDirectory)'
        customCommand: 'run build'
      displayName: 'npm build'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: |
          **/**
          !**/node_modules/**
          !**/.git/**
          !**/storage/**
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        CleanTargetFolder: true
        OverWrite: true
      displayName: 'Copy files to publish directory'

    - script: |
        cp .env.example .env
        php artisan key:generate
      displayName: 'Config laravel enviroment'

#    - script: |
#        php artisan migrate --force
#      displayName: 'Run database migrations'

#    - script: vendor/bin/phpunit
#      displayName: 'Run unit tests'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
        StoreAsTar: true